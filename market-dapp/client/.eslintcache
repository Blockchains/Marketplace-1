[{"C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\App.js":"1","C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\pages\\MainPage.js":"2","C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\reportWebVitals.js":"3","C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\index.js":"4","C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\pages\\NavbarPage.js":"5","C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\pages\\UploadCar.js":"6","C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\pages\\RouterPage.js":"7","C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\ipfs.js":"8","C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\pages\\UploadSkin.js":"9"},{"size":874,"mtime":1606611416097,"results":"10","hashOfConfig":"11"},{"size":4819,"mtime":1606664312166,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606348237844,"results":"13","hashOfConfig":"11"},{"size":547,"mtime":1606611496916,"results":"14","hashOfConfig":"11"},{"size":1878,"mtime":1606669449026,"results":"15","hashOfConfig":"11"},{"size":7988,"mtime":1606660703558,"results":"16","hashOfConfig":"11"},{"size":2005,"mtime":1606619258360,"results":"17","hashOfConfig":"11"},{"size":150,"mtime":1606617733573,"results":"18","hashOfConfig":"11"},{"size":6518,"mtime":1606619347533,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cnb361",{"filePath":"22","messages":"23","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\App.js",[],"C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\pages\\MainPage.js",["41","42","43","44","45","46","47"],"import React, { Component } from 'react';\r\nimport { Button, Card, ListGroup } from 'react-bootstrap';\r\nimport \"../css/mainpage.css\";\r\n\r\nconst listStyle = {\r\n    overflowY: \"scroll\",\r\n    border: '1px solid red',\r\n    width: '500px',\r\n    float: 'left',\r\n    height: '500px',\r\n    position: 'relative'\r\n}\r\n\r\n\r\nclass MainPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            drizzle: props.drizzle,\r\n            drizzleState: props.drizzleState,\r\n            listCars: [],\r\n            listSkins: [],\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const contract = await this.state.drizzle.contracts.IPFSInbox\r\n        const response_cars = await contract.methods.getCars().call();\r\n        const response_skins = await contract.methods.getSkins().call();\r\n        this.setState({ listCars: response_cars, listSkins: response_skins });\r\n    }\r\n\r\n    getLists = async (event) => {\r\n        event.preventDefault();\r\n        for (const [index, value] of this.state.listCars.entries()) {\r\n            let ipfsHash = this.state.listCars[index].ipfsHash\r\n            let carBrand = this.state.listCars[index].carBrand\r\n            let track = this.state.listCars[index].track\r\n            let simulator = this.state.listCars[index].simulator\r\n            let season = this.state.listCars[index].season\r\n            let price = this.state.listCars[index].price\r\n\r\n            console.log(value)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const cars = [];\r\n        const skins = [];\r\n\r\n        if (!this.state.listCars.isEmpty || !this.state.listSkins.isEmpty) {\r\n\r\n            for (const [index, value] of this.state.listCars.entries()) {\r\n                let ipfsHash = value.ipfsHash\r\n                let carBrand = value.carBrand\r\n                let track = value.track\r\n                let simulator = value.simulator\r\n                let season = value.season\r\n                let price = value.price\r\n                cars.push(\r\n                    <ListGroup.Item key={index}>\r\n                        <Card style={{ width: '18rem' }} key={index}>\r\n                            <Card.Body>\r\n                                <Card.Title>{carBrand}</Card.Title>\r\n                                <Card.Text>\r\n                                    <div><b>IPFS hash:</b> {ipfsHash}</div>\r\n                                    <div><b>Track:</b> {track}</div>\r\n                                    <div><b>Simulator:</b> {simulator}</div>\r\n                                    <div><b>Season:</b> {season}</div>\r\n                                    <div><b>Price:</b> {price}</div>\r\n                                </Card.Text>\r\n                                {/*  <Button variant=\"primary\">Go somewhere</Button> */}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </ListGroup.Item>\r\n                )\r\n            }\r\n\r\n            for (const [index, value] of this.state.listSkins.entries()) {\r\n                let ipfsHash = value.ipfsHash\r\n                let carBrand = value.carBrand\r\n                let simulator = value.simulator\r\n                let price = value.price\r\n                skins.push(\r\n                    <ListGroup.Item key={index}>\r\n                        <Card className=\"card\">\r\n                            <Card.Body>\r\n                                <Card.Title>{carBrand}</Card.Title>\r\n                                <Card.Text>\r\n                                    <div><b>IPFS hash:</b> {ipfsHash}</div>\r\n                                    <div><b>Simulator:</b> {simulator}</div>\r\n                                    <div><b>Price:</b> {price}</div>\r\n                                </Card.Text>\r\n                                {/*  <Button variant=\"primary\">Go somewhere</Button> */}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </ListGroup.Item>\r\n                )\r\n            }\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"center-text\">\r\n                    <h1 >Items</h1>\r\n                </div>\r\n                <div>Available Cars</div>\r\n                <div style={{ listStyle }}>\r\n                    <ListGroup>\r\n                        {cars}\r\n                    </ListGroup>\r\n\r\n                </div>\r\n                <div>Available Skins</div>\r\n                <div>\r\n                    <ListGroup bsStyle=\"default\" className=\"list-group list-group-horizontal nopadding\">\r\n                        {skins}\r\n                    </ListGroup>\r\n                </div>\r\n                <br>\r\n                </br>\r\n                {/* <Button onClick={this.getLists}>Get list</Button> */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPage;","C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\reportWebVitals.js",[],"C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\index.js",[],["48","49"],"C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\pages\\NavbarPage.js",["50","51"],"C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\pages\\UploadCar.js",[],"C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\pages\\RouterPage.js",["52","53","54","55","56","57","58"],"import React, { Component } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport MainPage from \"./MainPage\";\r\nimport UploadCar from \"./UploadCar\";\r\nimport UploadSkin from \"./UploadSkin\";\r\nimport NavbarPage from \"./NavbarPage\";\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl } from 'react-bootstrap'; // Check out drizzle's react components at @drizzle/react-components\r\n\r\n\r\nclass RouterPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            drizzle: props.drizzle,\r\n            drizzleState: props.drizzleState,\r\n            listCars: null,\r\n            listSkins: null,\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        const contract = this.state.drizzle.contract;\r\n        console.log(this.state.drizzle)\r\n        /*\r\n        const response_cars = await contract.methods.getCars().call();\r\n        const response_skins = await contract.methods.getSkins().call();\r\n        this.setState({ listCars: response_cars, listSkins: response_skins });*/\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Router>\r\n                    <NavbarPage />\r\n                    <Switch>\r\n                        <Route exact path=\"/uploadcar\">\r\n                            <UploadCar drizzle={this.state.drizzle} drizzleState={this.state.drizzleState} />\r\n                        </Route>\r\n                        <Route exact path=\"/uploadskin\">\r\n                            <UploadSkin drizzle={this.state.drizzle} drizzleState={this.state.drizzleState} />\r\n                        </Route>\r\n                        <Route exact\r\n                            path=\"/\"\r\n                            component={() => <MainPage drizzle={this.state.drizzle} drizzleState={this.state.drizzleState} />} />\r\n                    </Switch>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RouterPage;","C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\ipfs.js",[],"C:\\Users\\afons\\Documents\\Development\\Marketplace\\market-dapp\\client\\src\\pages\\UploadSkin.js",[],{"ruleId":"59","severity":1,"message":"60","line":2,"column":10,"nodeType":"61","messageId":"62","endLine":2,"endColumn":16},{"ruleId":"59","severity":1,"message":"63","line":39,"column":17,"nodeType":"61","messageId":"62","endLine":39,"endColumn":25},{"ruleId":"59","severity":1,"message":"64","line":40,"column":17,"nodeType":"61","messageId":"62","endLine":40,"endColumn":25},{"ruleId":"59","severity":1,"message":"65","line":41,"column":17,"nodeType":"61","messageId":"62","endLine":41,"endColumn":22},{"ruleId":"59","severity":1,"message":"66","line":42,"column":17,"nodeType":"61","messageId":"62","endLine":42,"endColumn":26},{"ruleId":"59","severity":1,"message":"67","line":43,"column":17,"nodeType":"61","messageId":"62","endLine":43,"endColumn":23},{"ruleId":"59","severity":1,"message":"68","line":44,"column":17,"nodeType":"61","messageId":"62","endLine":44,"endColumn":22},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"59","severity":1,"message":"73","line":2,"column":36,"nodeType":"61","messageId":"62","endLine":2,"endColumn":44},{"ruleId":"59","severity":1,"message":"74","line":3,"column":10,"nodeType":"61","messageId":"62","endLine":3,"endColumn":14},{"ruleId":"59","severity":1,"message":"74","line":6,"column":5,"nodeType":"61","messageId":"62","endLine":6,"endColumn":9},{"ruleId":"59","severity":1,"message":"75","line":12,"column":10,"nodeType":"61","messageId":"62","endLine":12,"endColumn":16},{"ruleId":"59","severity":1,"message":"76","line":12,"column":18,"nodeType":"61","messageId":"62","endLine":12,"endColumn":21},{"ruleId":"59","severity":1,"message":"77","line":12,"column":23,"nodeType":"61","messageId":"62","endLine":12,"endColumn":34},{"ruleId":"59","severity":1,"message":"78","line":12,"column":36,"nodeType":"61","messageId":"62","endLine":12,"endColumn":40},{"ruleId":"59","severity":1,"message":"79","line":12,"column":42,"nodeType":"61","messageId":"62","endLine":12,"endColumn":53},{"ruleId":"59","severity":1,"message":"80","line":30,"column":15,"nodeType":"61","messageId":"62","endLine":30,"endColumn":23},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'ipfsHash' is assigned a value but never used.","'carBrand' is assigned a value but never used.","'track' is assigned a value but never used.","'simulator' is assigned a value but never used.","'season' is assigned a value but never used.","'price' is assigned a value but never used.","no-native-reassign",["81"],"no-negated-in-lhs",["82"],"'Dropdown' is defined but never used.","'Link' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'contract' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]